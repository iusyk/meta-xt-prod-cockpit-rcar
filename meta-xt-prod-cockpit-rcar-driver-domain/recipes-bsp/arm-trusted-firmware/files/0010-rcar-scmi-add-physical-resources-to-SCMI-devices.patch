From 72e23717ae4c95df29be5c617c168c8a5d3dc3c8 Mon Sep 17 00:00:00 2001
From: Ihor Usyk <ihor_usyk@epam.com>
Date: Mon, 12 Jun 2023 17:15:13 +0200
Subject: [PATCH 10/12] rcar: scmi: add physical resources to SCMI devices

Put HW descriptions for EAVB, USB, I2C and audio controllers under
corresponding drivers management.

Signed-off-by: Sergiy Kibrik <Sergiy_Kibrik@epam.com>
Signed-off-by: Ihor Usyk <ihor_usyk@epam.com>
---
 .../common/include/rcar_scmi_resources.h      | 108 +++-
 plat/renesas/rcar/rcar_scmi_clocks.c          | 557 ++++++++++++++++++
 plat/renesas/rcar/rcar_scmi_devices.c         | 110 ++++
 plat/renesas/rcar/rcar_scmi_reset.c           | 145 +++++
 4 files changed, 918 insertions(+), 2 deletions(-)

diff --git a/plat/renesas/common/include/rcar_scmi_resources.h b/plat/renesas/common/include/rcar_scmi_resources.h
index 8cd3611e4..d31fe2dc0 100644
--- a/plat/renesas/common/include/rcar_scmi_resources.h
+++ b/plat/renesas/common/include/rcar_scmi_resources.h
@@ -32,16 +32,120 @@
 #define RCAR_SCMI_RESOURCES_H
 
 enum rcar_scmi_devid {
-       RCAR_SCMIDEV_MAX
+	RCAR_SCMIDEV_EAVB,	/*  0 */
+	RCAR_SCMIDEV_HDMI0,	/*  1 */
+	RCAR_SCMIDEV_HDMI1,	/*  2 */
+	RCAR_SCMIDEV_I2C0,	/*  3 */
+	RCAR_SCMIDEV_I2C1,	/*  4 */
+	RCAR_SCMIDEV_I2C2,	/*  5 */
+	RCAR_SCMIDEV_I2C3,	/*  6 */
+	RCAR_SCMIDEV_I2C4,	/*  7 */
+	RCAR_SCMIDEV_XHCI0,	/*  8 */
+	RCAR_SCMIDEV_OHCI0,	/*  9 */
+	RCAR_SCMIDEV_EHCI0,	/* 10 */
+	RCAR_SCMIDEV_OHCI1,	/* 11 */
+	RCAR_SCMIDEV_EHCI1,	/* 12 */
+	RCAR_SCMIDEV_USB_DMAC0,	/* 13 */
+	RCAR_SCMIDEV_USB_DMAC1,	/* 14 */
+	RCAR_SCMIDEV_USB_DMAC2,	/* 15 */
+	RCAR_SCMIDEV_USB_DMAC3,	/* 16 */
+	RCAR_SCMIDEV_USB2_PHY0,	/* 17 */
+	RCAR_SCMIDEV_USB2_PHY1,	/* 18 */
+	RCAR_SCMIDEV_HSUSB,	/* 19 */
+	RCAR_SCMIDEV_SOUND,	/* 20 */
+	RCAR_SCMIDEV_AUDMA0,	/* 21 */
+	RCAR_SCMIDEV_AUDMA1,	/* 22 */
+ 	RCAR_SCMIDEV_MAX
 };
 
 enum rcar_scmi_rst_offset {
+	RCAR_SCMIRST_EAVB,	/*  0*/
+	RCAR_SCMIRST_HDMI0,	/*  1 */
+	RCAR_SCMIRST_HDMI1,	/*  2 */
+	RCAR_SCMIRST_I2C0,	/*  3 */
+	RCAR_SCMIRST_I2C1,	/*  4 */
+	RCAR_SCMIRST_I2C2,	/*  5 */
+	RCAR_SCMIRST_I2C3,	/*  6 */
+	RCAR_SCMIRST_I2C4,	/*  7 */
+	RCAR_SCMIRST_XHCI0,	/*  8 */
+	RCAR_SCMIRST_USB2_01,	/*  9 */
+	RCAR_SCMIRST_USB2_02,	/* 10 */
+	RCAR_SCMIRST_USB2_1,	/* 11 */
+	RCAR_SCMIRST_USB_DMAC0,	/* 12 */
+	RCAR_SCMIRST_USB_DMAC1,	/* 13 */
+	RCAR_SCMIRST_USB_DMAC2,	/* 14 */
+	RCAR_SCMIRST_USB_DMAC3,	/* 15 */
+	RCAR_SCMIRST_SSI,	/* 16 */
+	RCAR_SCMIRST_SSI9,	/* 17 */
+	RCAR_SCMIRST_SSI8,	/* 18 */
+	RCAR_SCMIRST_SSI7,	/* 19 */
+	RCAR_SCMIRST_SSI6,	/* 20 */
+	RCAR_SCMIRST_SSI5,	/* 21 */
+	RCAR_SCMIRST_SSI4,	/* 22 */
+	RCAR_SCMIRST_SSI3,	/* 23 */
+	RCAR_SCMIRST_SSI2,	/* 24 */
+	RCAR_SCMIRST_SSI1,	/* 25 */
+	RCAR_SCMIRST_SSI0,	/* 26 */
+	RCAR_SCMIRST_AUDMAC1,	/* 27 */
+	RCAR_SCMIRST_AUDMAC0,	/* 28 */
        RCAR_SCMIRST_MAX
 };
 
 enum rcar_scmi_clk {
+	RCAR_SCMICLK_EAVB,	/*  0 */
+	RCAR_SCMICLK_XHCI0,	/*  1 */
+	RCAR_SCMICLK_EHCI0,	/*  2 */
+	RCAR_SCMICLK_HSUSB,	/*  3 */
+	RCAR_SCMICLK_EHCI1,	/*  4 */
+	RCAR_SCMICLK_USB_DMAC0,	/*  5 */
+	RCAR_SCMICLK_USB_DMAC1,	/*  6 */
+	RCAR_SCMICLK_USB_DMAC30,/*  7 */
+	RCAR_SCMICLK_USB_DMAC31,/*  8 */
+	RCAR_SCMICLK_SSI_ALL,	/*  9 */
+	RCAR_SCMICLK_SSI9,	/* 10 */
+	RCAR_SCMICLK_SSI8,	/* 11 */
+	RCAR_SCMICLK_SSI7,	/* 12 */
+	RCAR_SCMICLK_SSI6,	/* 13 */
+	RCAR_SCMICLK_SSI5,	/* 14 */
+	RCAR_SCMICLK_SSI4,	/* 15 */
+	RCAR_SCMICLK_SSI3,	/* 16 */
+	RCAR_SCMICLK_SSI2,	/* 17 */
+	RCAR_SCMICLK_SSI1,	/* 18 */
+	RCAR_SCMICLK_SSI0,	/* 19 */
+	RCAR_SCMICLK_SCU_ALL,	/* 20 */
+	RCAR_SCMICLK_SCU_DVC1,	/* 21 */
+	RCAR_SCMICLK_SCU_DVC0,	/* 22 */
+	RCAR_SCMICLK_SCU_MIX1,	/* 23 */
+	RCAR_SCMICLK_SCU_MIX0,	/* 24 */
+	RCAR_SCMICLK_SCU_SRC9,	/* 25 */
+	RCAR_SCMICLK_SCU_SRC8,	/* 26 */
+	RCAR_SCMICLK_SCU_SRC7,	/* 27 */
+	RCAR_SCMICLK_SCU_SRC6,	/* 28 */
+	RCAR_SCMICLK_SCU_SRC5,	/* 29 */
+	RCAR_SCMICLK_SCU_SRC4,	/* 30 */
+	RCAR_SCMICLK_SCU_SRC3,	/* 31 */
+	RCAR_SCMICLK_SCU_SRC2,	/* 32 */
+	RCAR_SCMICLK_SCU_SRC1,	/* 33 */
+	RCAR_SCMICLK_SCU_SRC0,	/* 34 */
+	RCAR_SCMICLK_AUDMAC1,	/* 35 */
+	RCAR_SCMICLK_AUDMAC0,	/* 36 */
+	RCAR_SCMICLK_HDMI,
+	RCAR_SCMICLK_HDMI0,
+	RCAR_SCMICLK_HDMI1,
+	RCAR_CLK_EXTAL,
+	RCAR_CLK_MAIN,
+	RCAR_CLK_PLL1,
+	RCAR_CLK_PLL1D2,
+	RCAR_CLK_S0,
+	RCAR_CLK_S1,
+	RCAR_CLK_S3,
+	RCAR_CLK_S0D6,
+	RCAR_CLK_S1D2,
+	RCAR_CLK_S3D1,
+	RCAR_CLK_S3D2,
+	RCAR_CLK_S3D4,
        RCAR_CLK_MAX,
-       RCAR_SCMICLK_MAX = RCAR_CLK_MAX /* end of SCMI exported clocks */
+	RCAR_SCMICLK_MAX = RCAR_SCMICLK_HDMI /* end of SCMI exported clocks */
 };
 
 extern const struct scmi_device rcar_devices[RCAR_SCMIDEV_MAX];
diff --git a/plat/renesas/rcar/rcar_scmi_clocks.c b/plat/renesas/rcar/rcar_scmi_clocks.c
index 0ba91e8db..0b2b92908 100644
--- a/plat/renesas/rcar/rcar_scmi_clocks.c
+++ b/plat/renesas/rcar/rcar_scmi_clocks.c
@@ -36,6 +36,17 @@
 #include "rcar_scmi_resources.h"
 
 #define CPG_BASE U(0xE6150000)
+#define SMSTPCR3  0x13C
+#define SMSTPCR5  0x144
+#define SMSTPCR7  0x14C
+#define SMSTPCR8  0x990
+#define SMSTPCR10 0x998
+
+#define MSTPSR3  0x048
+#define MSTPSR5  0x03C
+#define MSTPSR7  0x1C4
+#define MSTPSR8  0x9A0
+#define MSTPSR10 0x9A8
 
 enum scmi_message_id {
        PROTOCOL_VERSION = 0x0,
@@ -73,6 +84,552 @@ struct scmi_clk_ops {
 static spinlock_t clk_lock;
 
 struct scmi_clk rcar_clocks[RCAR_CLK_MAX] = {
+	[RCAR_SCMICLK_EAVB] = {
+		.name = "_etheravb",
+		.parent = RCAR_CLK_S0D6,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR8,
+			.st = MSTPSR8,
+			.bit = 12,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_XHCI0] = {
+		.name = "_usb3-if0",
+		.parent = RCAR_CLK_S3D1,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR3,
+			.st = MSTPSR3,
+			.bit = 28,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_EHCI0] = {
+		.name = "_ehci0",
+		.parent = RCAR_CLK_S3D2,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR7,
+			.st = MSTPSR7,
+			.bit = 3,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_HSUSB] = {
+		.name = "_hsusb",
+		.parent = RCAR_CLK_S3D2,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR7,
+			.st = MSTPSR7,
+			.bit = 4,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_EHCI1] = {
+		.name = "_ehci1",
+		.parent = RCAR_CLK_S3D2,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR7,
+			.st = MSTPSR7,
+			.bit = 2,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_USB_DMAC0] = {
+		.name = "_usb-dmac0",
+		.parent = RCAR_CLK_S3D1,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR3,
+			.st = MSTPSR3,
+			.bit = 30,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_USB_DMAC1] = {
+		.name = "_usb-dmac1",
+		.parent = RCAR_CLK_S3D1,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR3,
+			.st = MSTPSR3,
+			.bit = 31,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_USB_DMAC30] = {
+		.name = "_usb-dmac30",
+		.parent = RCAR_CLK_S3D1,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR3,
+			.st = MSTPSR3,
+			.bit = 26,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_USB_DMAC31] = {
+		.name = "_usb-dmac31",
+		.parent = RCAR_CLK_S3D1,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR3,
+			.st = MSTPSR3,
+			.bit = 29,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI_ALL] = {
+		.name = "_ssi-all",
+		.parent = RCAR_CLK_S3D4,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 5,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI9] = {
+		.name = "_ssi9",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 6,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI8] = {
+		.name = "_ssi8",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 7,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI7] = {
+		.name = "_ssi7",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 8,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI6] = {
+		.name = "_ssi6",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 9,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI5] = {
+		.name = "_ssi5",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 10,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI4] = {
+		.name = "_ssi4",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 11,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI3] = {
+		.name = "_ssi3",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 12,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI2] = {
+		.name = "_ssi2",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 13,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI1] = {
+		.name = "_ssi1",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 14,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SSI0] = {
+		.name = "_ssi0",
+		.parent = RCAR_SCMICLK_SSI_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 15,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_ALL] = {
+		.name = "_scu-all",
+		.parent = RCAR_CLK_S3D4,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 17,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_DVC1] = {
+		.name = "_scu-dvc1",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 18,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_DVC0] = {
+		.name = "_scu-dvc0",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 19,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_MIX1] = {
+		.name = "_scu-ctu1-mix1",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 20,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_MIX0] = {
+		.name = "_scu-ctu0-mix0",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 21,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC9] = {
+		.name = "_scu-src9",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 22,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC8] = {
+		.name = "_scu-src8",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 23,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC7] = {
+		.name = "_scu-src7",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 24,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC6] = {
+		.name = "_scu-src6",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 25,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC5] = {
+		.name = "_scu-src5",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 26,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC4] = {
+		.name = "_scu-src4",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 27,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC3] = {
+		.name = "_scu-src3",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 28,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC2] = {
+		.name = "_scu-src2",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 29,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC1] = {
+		.name = "_scu-src1",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 30,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_SCU_SRC0] = {
+		.name = "_scu-src0",
+		.parent = RCAR_SCMICLK_SCU_ALL,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR10,
+			.st = MSTPSR10,
+			.bit = 31,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_AUDMAC1] = {
+		.name = "_audmac1",
+		.parent = RCAR_CLK_S1D2,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR5,
+			.st = MSTPSR5,
+			.bit = 1,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_AUDMAC0] = {
+		.name = "_audmac0",
+		.parent = RCAR_CLK_S1D2,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR5,
+			.st = MSTPSR5,
+			.bit = 2,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_HDMI] = {
+		.name = "_hdmi",
+		.parent = -1, /*TODO: div6 clocks support */
+		.type = CLK_TYPE_DIV6,
+		.clk.div6 = {
+			.cr = 0x250,
+		}
+	},
+	[RCAR_SCMICLK_HDMI0] = {
+		.name = "_hdmi0",
+		.parent = RCAR_SCMICLK_HDMI,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR7,
+			.st = MSTPSR7,
+			.bit = 29,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_SCMICLK_HDMI1] = {
+		.name = "_hdmi1",
+		.parent = RCAR_SCMICLK_HDMI,
+		.type = CLK_TYPE_MSSR,
+		.clk.mssr = {
+			.cr = SMSTPCR7,
+			.st = MSTPSR7,
+			.bit = 28,
+			.init = MSSR_OFF,
+		}
+	},
+	[RCAR_CLK_EXTAL] = {
+		.name = "extal",
+		.parent = -1,
+		.type = CLK_TYPE_EXTAL,
+		.clk.extal = {
+			.rate = 16666666,
+		}
+	},
+	[RCAR_CLK_MAIN] = {
+		.name = ".main",
+		.parent = RCAR_CLK_EXTAL,
+		.type = CLK_TYPE_FIXED,
+		/*TODO: should be set according to mode pins */
+		.clk.fixed = {
+			.div = 1,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_PLL1] = {
+		.name = ".pll1",
+		.parent = RCAR_CLK_MAIN,
+		.type = CLK_TYPE_FIXED,
+		/*TODO: should be set according to mode pins */
+		.clk.fixed = {
+			.div = 1,
+			.mult = 192,
+		}
+	},
+	[RCAR_CLK_PLL1D2] = {
+		.name = ".pll1_div2",
+		.parent = RCAR_CLK_PLL1,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 2,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S0] = {
+		.name = ".s0",
+		.parent = RCAR_CLK_PLL1D2,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 2,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S1] = {
+		.name = ".s1",
+		.parent = RCAR_CLK_PLL1D2,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 3,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S3] = {
+		.name = ".s3",
+		.parent = RCAR_CLK_PLL1D2,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 6,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S0D6] = {
+		.name = "s0d6",
+		.parent = RCAR_CLK_S0,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 6,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S1D2] = {
+		.name = "s1d2",
+		.parent = RCAR_CLK_S1,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 2,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S3D1] = {
+		.name = "s3d1",
+		.parent = RCAR_CLK_S3,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 1,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S3D2] = {
+		.name = "s3d2",
+		.parent = RCAR_CLK_S3,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 2,
+			.mult = 1,
+		}
+	},
+	[RCAR_CLK_S3D4] = {
+		.name = "s3d4",
+		.parent = RCAR_CLK_S3,
+		.type = CLK_TYPE_FIXED,
+		.clk.fixed = {
+			.div = 4,
+			.mult = 1,
+		}
+	},
 };
 
 static uint64_t __clk_get_rate_locked(uint32_t);
diff --git a/plat/renesas/rcar/rcar_scmi_devices.c b/plat/renesas/rcar/rcar_scmi_devices.c
index c63b7fe67..93cc7d197 100644
--- a/plat/renesas/rcar/rcar_scmi_devices.c
+++ b/plat/renesas/rcar/rcar_scmi_devices.c
@@ -38,4 +38,114 @@ static const struct scmi_device default_dev = {
 
 const struct scmi_device rcar_devices[RCAR_SCMIDEV_MAX] = {
 	[0 ... RCAR_SCMIDEV_MAX - 1] = default_dev, /* sentinel */
+
+	[RCAR_SCMIDEV_EAVB] = {
+		.rsts = (int[]){RCAR_SCMIRST_EAVB,-1},
+		.clks = (int[]){RCAR_SCMICLK_EAVB,-1},
+	},
+	[RCAR_SCMIDEV_HDMI0] = {
+		.rsts = (int[]){RCAR_SCMIRST_HDMI0,-1},
+		.clks = (int[]){RCAR_SCMICLK_HDMI,RCAR_SCMICLK_HDMI0,-1},
+	},
+	[RCAR_SCMIDEV_HDMI1] = {
+		.rsts = (int[]){RCAR_SCMIRST_HDMI1,-1},
+		.clks = (int[]){RCAR_SCMICLK_HDMI,RCAR_SCMICLK_HDMI1,-1},
+	},
+	[RCAR_SCMIDEV_I2C0] = {
+		.rsts = (int[]){RCAR_SCMIRST_I2C0,-1},
+		.clks = (int[]){-1},
+	},
+	[RCAR_SCMIDEV_I2C1] = {
+		.rsts = (int[]){RCAR_SCMIRST_I2C1,-1},
+		.clks = (int[]){-1},
+	},
+	[RCAR_SCMIDEV_I2C2] = {
+		.rsts = (int[]){RCAR_SCMIRST_I2C2,-1},
+		.clks = (int[]){-1},
+	},
+	[RCAR_SCMIDEV_I2C3] = {
+		.rsts = (int[]){RCAR_SCMIRST_I2C3,-1},
+		.clks = (int[]){-1},
+	},
+	[RCAR_SCMIDEV_I2C4] = {
+		.rsts = (int[]){RCAR_SCMIRST_I2C4,-1},
+		.clks = (int[]){-1},
+	},
+	[RCAR_SCMIDEV_XHCI0] = {
+		.rsts = (int[]){RCAR_SCMIRST_XHCI0,-1},
+		.clks = (int[]){RCAR_SCMICLK_XHCI0,-1},
+	},
+	[RCAR_SCMIDEV_OHCI0] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_01,RCAR_SCMIRST_USB2_02,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI0,RCAR_SCMICLK_HSUSB,-1},
+	},
+	[RCAR_SCMIDEV_EHCI0] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_01,RCAR_SCMIRST_USB2_02,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI0,RCAR_SCMICLK_HSUSB,-1},
+	},
+	[RCAR_SCMIDEV_OHCI1] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_1,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI1,-1},
+	},
+	[RCAR_SCMIDEV_EHCI1] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_1,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI1,-1},
+	},
+	[RCAR_SCMIDEV_USB_DMAC0] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB_DMAC0,-1},
+		.clks = (int[]){RCAR_SCMICLK_USB_DMAC0,-1},
+	},
+	[RCAR_SCMIDEV_USB_DMAC1] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB_DMAC1,-1},
+		.clks = (int[]){RCAR_SCMICLK_USB_DMAC1,-1},
+	},
+	[RCAR_SCMIDEV_USB_DMAC2] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB_DMAC2,-1},
+		.clks = (int[]){RCAR_SCMICLK_USB_DMAC30,-1},
+	},
+	[RCAR_SCMIDEV_USB_DMAC3] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB_DMAC3,-1},
+		.clks = (int[]){RCAR_SCMICLK_USB_DMAC31,-1},
+	},
+	[RCAR_SCMIDEV_USB2_PHY0] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_01,RCAR_SCMIRST_USB2_02,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI0,RCAR_SCMICLK_HSUSB,-1},
+	},
+	[RCAR_SCMIDEV_USB2_PHY1] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_1,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI1,-1},
+	},
+	[RCAR_SCMIDEV_HSUSB] = {
+		.rsts = (int[]){RCAR_SCMIRST_USB2_01,RCAR_SCMIRST_USB2_02,-1},
+		.clks = (int[]){RCAR_SCMICLK_EHCI0,RCAR_SCMICLK_HSUSB,-1},
+	},
+	[RCAR_SCMIDEV_SOUND] = {
+		.rsts = (int[]){RCAR_SCMIRST_SSI,RCAR_SCMIRST_SSI9,
+				RCAR_SCMIRST_SSI8,RCAR_SCMIRST_SSI7,
+				RCAR_SCMIRST_SSI6,RCAR_SCMIRST_SSI5,
+				RCAR_SCMIRST_SSI4,RCAR_SCMIRST_SSI3,
+				RCAR_SCMIRST_SSI2,RCAR_SCMIRST_SSI1,
+				RCAR_SCMIRST_SSI0,-1},
+		.clks = (int[]){RCAR_SCMICLK_SSI_ALL,RCAR_SCMICLK_SSI9,
+				RCAR_SCMICLK_SSI8,RCAR_SCMICLK_SSI7,
+				RCAR_SCMICLK_SSI6,RCAR_SCMICLK_SSI5,
+				RCAR_SCMICLK_SSI4,RCAR_SCMICLK_SSI3,
+				RCAR_SCMICLK_SSI2,RCAR_SCMICLK_SSI1,
+				RCAR_SCMICLK_SSI0,
+				RCAR_SCMICLK_SCU_SRC9,RCAR_SCMICLK_SCU_SRC8,
+				RCAR_SCMICLK_SCU_SRC7,RCAR_SCMICLK_SCU_SRC6,
+				RCAR_SCMICLK_SCU_SRC5,RCAR_SCMICLK_SCU_SRC4,
+				RCAR_SCMICLK_SCU_SRC3,RCAR_SCMICLK_SCU_SRC2,
+				RCAR_SCMICLK_SCU_SRC1,RCAR_SCMICLK_SCU_SRC0,
+				RCAR_SCMICLK_SCU_MIX1,RCAR_SCMICLK_SCU_MIX0,
+				RCAR_SCMICLK_SCU_DVC1,RCAR_SCMICLK_SCU_DVC0,-1},
+	},
+	[RCAR_SCMIDEV_AUDMA0] = {
+		.rsts = (int[]){RCAR_SCMIRST_AUDMAC0,-1},
+		.clks = (int[]){RCAR_SCMICLK_AUDMAC0,-1},
+	},
+	[RCAR_SCMIDEV_AUDMA1] = {
+		.rsts = (int[]){RCAR_SCMIRST_AUDMAC1,-1},
+		.clks = (int[]){RCAR_SCMICLK_AUDMAC1,-1},
+	},
 };
diff --git a/plat/renesas/rcar/rcar_scmi_reset.c b/plat/renesas/rcar/rcar_scmi_reset.c
index 9947207e6..7df901913 100644
--- a/plat/renesas/rcar/rcar_scmi_reset.c
+++ b/plat/renesas/rcar/rcar_scmi_reset.c
@@ -38,6 +38,151 @@
 #define CPG_BASE U(0xE6150000)
 
 struct scmi_reset rcar_resets[RCAR_SCMIRST_MAX] = {
+	[RCAR_SCMIRST_EAVB] = {
+		.rst_reg = 0x920,
+		.clr_reg = 0x960,
+		.bit_off = 12,
+	},
+	[RCAR_SCMIRST_HDMI0] = {
+		.rst_reg = 0x14C,
+		.clr_reg = 0x95C,
+		.bit_off = 29,
+	},
+	[RCAR_SCMIRST_HDMI1] = {
+		.rst_reg = 0x14C,
+		.clr_reg = 0x95C,
+		.bit_off = 28,
+	},
+	[RCAR_SCMIRST_I2C0] = {
+		.rst_reg = 0x924,
+		.clr_reg = 0x964,
+		.bit_off = 31,
+	},
+	[RCAR_SCMIRST_I2C1] = {
+		.rst_reg = 0x924,
+		.clr_reg = 0x964,
+		.bit_off = 30,
+	},
+	[RCAR_SCMIRST_I2C2] = {
+		.rst_reg = 0x924,
+		.clr_reg = 0x964,
+		.bit_off = 29,
+	},
+	[RCAR_SCMIRST_I2C3] = {
+		.rst_reg = 0x924,
+		.clr_reg = 0x964,
+		.bit_off = 28,
+	},
+	[RCAR_SCMIRST_I2C4] = {
+		.rst_reg = 0x924,
+		.clr_reg = 0x964,
+		.bit_off = 27,
+	},
+	[RCAR_SCMIRST_XHCI0] = {
+		.rst_reg = 0x0B8,
+		.clr_reg = 0x94C,
+		.bit_off = 28,
+	},
+	[RCAR_SCMIRST_USB2_01] = {
+		.rst_reg = 0x1CC,
+		.clr_reg = 0x95C,
+		.bit_off = 3,
+	},
+	[RCAR_SCMIRST_USB2_02] = {
+		.rst_reg = 0x1CC,
+		.clr_reg = 0x95C,
+		.bit_off = 4,
+	},
+	[RCAR_SCMIRST_USB2_1] = {
+		.rst_reg = 0x1CC,
+		.clr_reg = 0x95C,
+		.bit_off = 2,
+	},
+	[RCAR_SCMIRST_USB_DMAC0] = {
+		.rst_reg = 0x0B8,
+		.clr_reg = 0x94C,
+		.bit_off = 30,
+	},
+	[RCAR_SCMIRST_USB_DMAC1] = {
+		.rst_reg = 0x0B8,
+		.clr_reg = 0x94C,
+		.bit_off = 31,
+	},
+	[RCAR_SCMIRST_USB_DMAC2] = {
+		.rst_reg = 0x0B8,
+		.clr_reg = 0x94C,
+		.bit_off = 26,
+	},
+	[RCAR_SCMIRST_USB_DMAC3] = {
+		.rst_reg = 0x0B8,
+		.clr_reg = 0x94C,
+		.bit_off = 29,
+	},
+	[RCAR_SCMIRST_SSI] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 5,
+	},
+	[RCAR_SCMIRST_SSI9] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 6,
+	},
+	[RCAR_SCMIRST_SSI8] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 7,
+	},
+	[RCAR_SCMIRST_SSI7] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 8,
+	},
+	[RCAR_SCMIRST_SSI6] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 9,
+	},
+	[RCAR_SCMIRST_SSI5] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 10,
+	},
+	[RCAR_SCMIRST_SSI4] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 11,
+	},
+	[RCAR_SCMIRST_SSI3] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 12,
+	},
+	[RCAR_SCMIRST_SSI2] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 13,
+	},
+	[RCAR_SCMIRST_SSI1] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 14,
+	},
+	[RCAR_SCMIRST_SSI0] = {
+		.rst_reg = 0x928,
+		.clr_reg = 0x968,
+		.bit_off = 15,
+	},
+	[RCAR_SCMIRST_AUDMAC1] = {
+		.rst_reg = 0x0C4,
+		.clr_reg = 0x954,
+		.bit_off = 1,
+	},
+	[RCAR_SCMIRST_AUDMAC0] = {
+		.rst_reg = 0x0C4,
+		.clr_reg = 0x954,
+		.bit_off = 2,
+	},
 };
 
 enum scmi_message_id {
-- 
2.25.1

